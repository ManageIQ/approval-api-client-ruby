=begin
#Insights Service Approval APIs

#APIs to query approval service

OpenAPI spec version: 1.0.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.3.4

=end

require 'spec_helper'
require 'json'

# Unit tests for ApprovalAPIClient::RequestApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RequestApi' do
  before do
    # run before each test
    @instance = ApprovalAPIClient::RequestApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RequestApi' do
    it 'should create an instance of RequestApi' do
      expect(@instance).to be_instance_of(ApprovalAPIClient::RequestApi)
    end
  end

  # unit tests for create_request
  # Add an approval request by given parameters
  # Add an approval request by given parameters
  # @param workflow_id Id of workflow
  # @param request_in Parameters need to create a request
  # @param [Hash] opts the optional parameters
  # @return [RequestOut]
  describe 'create_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_requests
  # Return an array of approval requests
  # Return an array of requests
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :decision Fetch item by given decision (undecided, approved, denied)
  # @option opts [Array<String>] :state Fetch item by given state (pending, skipped, notified, finished)
  # @option opts [String] :requester Fetch item by given requester
  # @option opts [Integer] :limit How many items to return at one time (max 1000)
  # @option opts [Integer] :offset Starting Offset
  # @return [RequestOutCollection]
  describe 'list_requests test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_requests_by_workflow
  # Return approval requests by given workflow id
  # Return approval requests by given workflow id
  # @param workflow_id Id of workflow
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit How many items to return at one time (max 1000)
  # @option opts [Integer] :offset Starting Offset
  # @return [RequestOutCollection]
  describe 'list_requests_by_workflow test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_request
  # Return an approval request by given id
  # Return an approval request by given id
  # @param id Query by id
  # @param [Hash] opts the optional parameters
  # @return [RequestOut]
  describe 'show_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
